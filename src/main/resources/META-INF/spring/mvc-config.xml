<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context.xsd
http://www.springframework.org/schema/mvc
http://www.springframework.org/schema/mvc/spring-mvc.xsd
http://www.springframework.org/schema/aop
http://www.springframework.org/schema/aop/spring-aop.xsd">
    <context:component-scan base-package="${base-package}"/>
    <mvc:annotation-driven/>
    <mvc:default-servlet-handler/>
    <mvc:resources location="${mvc.staticResources.location}" mapping="${mvc.staticResources.mapping}"/>

    <!-- 访问静态文件（jpg,js,css）的方法 -->
    <mvc:resources location="WEB-INF/resources/js/" mapping="/js/**" />
    <mvc:resources location="WEB-INF/resources/css/" mapping="/css/**" />
    <mvc:resources location="WEB-INF/resources/image/" mapping="/image/**" />

    <!-- messageSource -->
    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basename" value="${spring.messageSource.basename}"/>
        <property name="defaultEncoding" value="${spring.messageSource.defaultEncoding}"/>
    </bean>

    <!-- viewResolver -->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="cache" value="${spring.viewResolver.cache}"/>
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="${spring.viewResolver.prefix}"/>
        <property name="suffix" value="${spring.viewResolver.suffix}"/>
    </bean>

    <!-- 支持上传文件multipartResolver -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding" value="${spring.multipartResolver.defaultEncoding}"/>
        <property name="maxUploadSize" value="${spring.multipartResolver.maxUploadSize}"/>
        <property name="maxInMemorySize" value="${spring.multipartResolver.maxInMemorySize}"/>
    </bean>

    <!-- 返回json 需导入 jackson-annotations.jar，jackson-core.jar，jackson-databind.jar -->
    <!-- 通过处理器映射DefaultAnnotationHandlerMapping来开启支持@Controller注解 -->
    <bean id="requestMappingHandlerMapping" class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping" />
    <!-- 通过处理器适配器AnnotationMethodHandlerAdapter来开启支持@RequestMapping注解 -->
    <bean id="requestMappingHandlerAdapter" class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list>
                <!-- 配置返回字符串编码 -->
                <bean id="stringHttpMessageConverter" class="org.springframework.http.converter.StringHttpMessageConverter">
                    <property name="supportedMediaTypes">
                        <list>
                            <value>${messageConverters.stringHttpMessageConverter.html}</value>
                            <value>${messageConverters.stringHttpMessageConverter.json}</value>
                        </list>
                    </property>
                </bean>
                <!-- 配置 json 转换器 -->
                <bean id="mappingJackson2HttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                    <property name="supportedMediaTypes">
                        <list>
                            <value>${messageConverters.mappingJackson2HttpMessageConverter.html}</value>
                            <value>${messageConverters.mappingJackson2HttpMessageConverter.json}</value>
                        </list>
                    </property>
                </bean>
            </list>
        </property>
    </bean>

    <import resource="app-config.xml"/>
</beans>